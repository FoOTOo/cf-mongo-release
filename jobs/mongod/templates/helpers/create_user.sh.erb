#!/usr/bin/env bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

JOB_NAME='mongod'

# Add all binary packages into $PATH
declare -A seen_dir
while read -rd '' f; do
    seen_dir["${f%/*}"]=1
done < <(find "/var/vcap/data/packages" -type f -executable -print0)
export PATH="${!seen_dir[@]}:$PATH"

LOG_DIR=/var/vcap/sys/log/$JOB_NAME

printf '%s\n' 'use admin' 'db.system.users.find({"user": "<%= p("mongod.MONGODB_USER") %>"}).count()  == 0? db.createUser({"user" : "<%= p("mongod.MONGODB_USER") %>", "pwd" : "<%= p("mongod.MONGODB_PASS") %>", "roles" : ["root"]}) : db.updateUser("<%= p("mongod.MONGODB_USER") %>", {"pwd" : "<%= p("mongod.MONGODB_PASS") %>","roles" : [{ role: "userAdminAnyDatabase", db: "admin" }]});' | mongo -
echo 'use admin' 'db.system.users.find({"user": "<%= p("mongod.MONGODB_USER") %>"}).count()  == 0? db.createUser({"user" : "<%= p("mongod.MONGODB_USER") %>", "pwd" : "<%= p("mongod.MONGODB_PASS") %>", "roles" : ["root"]}) : db.updateUser("<%= p("mongod.MONGODB_USER") %>", {"pwd" : "<%= p("mongod.MONGODB_PASS") %>","roles" : [{ role: "userAdminAnyDatabase", db: "admin" }]});' > "$LOG_DIR/added_user.js"
echo "Added user: <%= p("mongod.MONGODB_USER") %>"


#mongodump --authenticationDatabase=admin -u monguser -p mongpass --archive=mongodb_dump.gz --gzip
mongorestore /var/vcap/data/packages/mongodb_dump.gz
